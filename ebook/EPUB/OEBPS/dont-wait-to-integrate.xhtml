<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Don't Wait to Integrate</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="stylesheet" href="css/styles.css" type="text/css" />
</head>
<body>

<main>
<h3 id="dont-wait-to-integrate">No. 46 &#8211; Don't Wait to Integrate</h3>
<p>Although developers can and should decompose large problems into a series of smaller ones, at some point they must integrate everything back into a single working whole. </p>

<p>Some experts recommend <a href="https://en.wikipedia.org/wiki/Continuous_integration" class="ext-link" target="_blank" rel="noopener">Continuous Integration</a> (CI), but at the very least we can say that development teams should integrate sooner rather than later. </p>

<p>Integration should include an integrated build of the entire system, and also testing of the integrated whole. </p>

<p>Integration of a system&#8217;s components is an example of the &#8220;check&#8221; step in the <a href="plan-do-check-act.xhtml" class="wiki-link">Plan-Do-Check-Act</a> cycle, and Continuous Integration (or something close to this extreme) should be considered an example of <a href="shorten-feedback-loops.xhtml" class="wiki-link">shortening your feedback loops</a> and <a href="make-problems-visible.xhtml" class="wiki-link">making problems visible</a>. </p>

<p>Projects that defer integration until late in their efforts almost always run into problems, and very often those problems are large enough to cause the project&#8217;s implementation to be delayed, if not canceled altogether. </p>

</main>
</body>
</html>
