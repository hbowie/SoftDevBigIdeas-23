<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Loose Coupling</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="stylesheet" href="css/styles.css" type="text/css" />
</head>
<body>

<main>
<p>2 <a href="fundamental.xhtml" class="nav-link">Fundamental</a>&#160;&#8593;</p><h3 id="loose-coupling">No. 11 &#8211; Loose Coupling</h3>
<p>When performing <a href="decomposition.xhtml" class="wiki-link">decomposition</a>, it is best to group elements so as to minimize coupling between groups. </p>

<p>Coupling can be thought of as communication between groups, or knowledge of what&#8217;s going on within other groups, or dependencies of one group on another. </p>

<p>Note that loose coupling is desirable, whether the groups under consideration are teams of developers, or packages of data and methods. </p>

<p>Loose coupling tends to maximize the freedom of each group to handle its own work without consideration for what&#8217;s going on in other groups. </p>

<a href="https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)" class="reflink" target="ref">Encapsulation</a> of data and internal components within objects is a notable feature of <a href="https://en.wikipedia.org/wiki/Object-oriented_programming" class="reflink" target="ref">Object-Oriented Programming</a> (OOP), and is one means by which tight coupling between objects may be avoided.

<p>Loose coupling frequently offers a way to make internal improvements to one object or group without necessitating concomitant changes to other objects/groups that communicate with the first, thus minimizing the &#8220;ripple effects&#8221; of changes. </p>

<p>When decomposing the staff of developers needed on large projects, the idea of loose coupling results in the formation of relatively small, self-managed <a href="build-great-teams.xhtml" class="wiki-link">teams</a> that contain all the resources they need to work relatively independently. </p>

<a href="https://en.wikipedia.org/wiki/Robustness_principle" class="reflink" target="ref">Postelâ€™s Law</a> can be thought of as another means of supporting loose coupling:

<blockquote>

<p>Be conservative in what you do; be liberal in what you accept from others. </p>
</blockquote>

<p>This admonition, for both software interfaces and human ones, encourages us to stick to the straight and narrow in our own behavior, but be tolerant of minor quirks in others. </p>

<p>In other words, minimize the chances that minor changes, or small misbehaviors, from a second group will cause a failure of the first group. </p>

<hr />
<p>Next: <a href="communicate-clearly.xhtml" class="nav-link">Communicate Clearly</a></p>

</main>
</body>
</html>
